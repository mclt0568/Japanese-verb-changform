#Copyright(c) 2019 mclt0568. MIT LISENCE applied.
#Predefined variables goes here

magicverbs = [
	"おきます",
	"おります",
	"おちます",
	"かります",
	"できます",
	"たります",
	"あびます"
]

hiragana = ["あ","か","さ","た","な","は","ま","や","ら","わ","い","き","し","ち","に","ひ","み","り","う","く","す","つ","ぬ","ふ","む","ゆ","る","え","け","せ","て","ね","へ","め","れ","お","こ","そ","と","の","ほ","も","よ","ろ","を","ぁ","ぃ","ぅ","ぇ","ぉ","っ","ん","ゃ","ゅ","ょ","が","ぎ","ぐ","げ","ご","ざ","じ","ず","ぜ","ぞ","だ","ぢ","づ","で","ど","ば","び","ぶ","べ","ぼ","ぱ","ぴ","ぷ","ぺ","ぽ","ゔ"]

class sortedhiragana:
	def __init__(self):
		self.a=["が","ざ","だ","ば","ぱ","あ","か","さ","た","な","は","ま","や","ら","わ"]
		self.i=["い","き","し","ち","に","ひ","み","り","ぎ","じ","ぢ","び","ぴ"]
		self.u=["ぐ","ず","づ","ぶ","ぷ","う","く","す","つ","ぬ","ふ","む","ゆ","る"]
		self.e=["げ","ぜ","で","べ","ぺ","え","け","せ","て","ね","へ","め","れ"]
		self.o=["ご","ぞ","ど","ぼ","ぽ","お","こ","そ","と","の","ほ","も","よ","ろ","を"]
		self.tiny_aiueo=["ぁ","ぃ","ぅ","ぇ","ぉ"]
		self.tiny_yayuyo=["ゃ","ゅ","ょ"]
		self.n=["ん"]
		self.sokuon=["っ"]
		self.daku_g=["が","ぎ","ぐ","げ","ご"]
		self.daku_z=["ざ","じ","ず","ぜ","ぞ"]
		self.daku_d=["だ","ぢ","づ","で","ど"]
		self.daku_b=["ば","び","ぶ","べ","ぼ"]
		self.daku_p=["ぱ","ぴ","ぷ","ぺ","ぽ"]
		self.daku_v=["ゔ"]

	def torow(self,hiragana:str,row:str):
		if not (hiragana in globals()["hiragana"]):
			return None
		to_a={("い","う","え","お"):"あ",
		("き","く","け","こ"):"か",
		("し","す","せ","そ"):"さ",
		("ち","つ","て","と"):"た",
		("に","ぬ","ね","の"):"な",
		("ひ","ふ","へ","ほ"):"は",
		("み","む","め","も"):"ま",
		("ゆ","よ"):"や",
		("り","る","れ","ろ"):"ら",
		("を"):"わ"}
		
		to_i={("あ","う","え","お"):"い",
		("か","く","け","こ"):"き",
		("さ","す","せ","そ"):"し",
		("た","つ","て","と"):"ち",
		("な","ぬ","ね","の"):"に",	
		("は","ふ","へ","ほ"):"ひ",
		("ま","む","め","も"):"み",
		("ら","る","れ","ろ"):"り",}

		to_u= {
			("あ","い","え","お"):"う",
			("か","き","け","こ"):"く",
			("さ","し","せ","そ"):"す",
			("た","ち","て","と"):"つ",
			("な","に","ね","の"):"ぬ",
			("は","ひ","へ","ほ"):"ふ",
			("ま","み","め","も"):"む",
			("ら","り","れ","ろ"):"る",
			("や","よ"):"ゆ"
		}

		to_e= {
			("あ","い","う","お"):'え',
			("か","き","く","こ"):'け',
			("さ","し","す","そ"):'せ',
			("た","ち","つ","と"):'て',
			("な","に","ぬ","の"):'ね',
			("は","ひ","ふ","ほ"):'へ',
			("ま","み","む","も"):'め',
			("ら","り","る","ろ"):'れ',
			}

		to_o = {
			("あ","い","う","え"):"お",
			("か","き","く","け"):"こ",
			("さ","し","す","せ"):"そ",
			("た","ち","つ","て"):"と",
			("な","に","ぬ","ね"):"の",
			("は","ひ","ふ","へ"):"ほ",
			("ま","み","む","め"):"も",
			("ら","り","る","れ"):"ろ",
			("わ"):"を",
			("や","ゆ"):"よ"
		}

		if row =="a":
			for i in to_a:
				if hiragana in i:
					return to_a[i]
		elif row=="e":
			for i in to_e:
				if hiragana in i:
					return to_e[i]
		elif row=="i":
			for i in to_i:
				if hiragana in i:
					return to_i[i]
		elif row=="o":
			for i in to_o:
				if hiragana in i:
					return to_o[i]
		elif row=="u":
			for i in to_u:
				if hiragana in i:
					return to_u[i]
		return None
sortedhiragana = sortedhiragana()

